package main

// Цепочка обязанностей - это поведенческий паттерн проектирования, который позволяет передавать задачи на обработку последовательно по цепочке.
// Каждый последующий обработчик решает, может ли он обработать запрос сам и стоит ли передавать запрос дальше.
//
// Представьте, что вы делаете систему приёма онлайн-заказов. Вы хотите ограничить к ней доступ так,
// чтобы только авторизованные пользователи могли создавать заказы.
//
// Пользователь может попытаться «авторизоваться» в системе, если его запрос содержит логин и пароль.
// Но если такая попытка не удалась, то проверять права доступа не имеет смысла.
//
// Чтобы запустить:
// go run main.go service.go device.go service_data_save.go service_data_update.go
func main() {
	device := &Device{}
	updateSvc := &UpdateDataService{}
	saveSvc := &DataService{}

	device.Next = updateSvc
	updateSvc.Next = saveSvc

	data := &Data{
		GetSource:    false,
		UpdateSource: false,
	}
	device.Execute(data)
}
